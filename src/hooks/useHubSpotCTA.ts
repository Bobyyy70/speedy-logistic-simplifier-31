import { useCallback } from 'react';

export const useHubSpotCTA = (ctaId: string = '248429698260') => {
  const triggerCTA = useCallback(() => {
    console.log(`üéØ D√©clenchement du CTA HubSpot ${ctaId}`);
    
    // Essayer plusieurs m√©thodes pour d√©clencher le CTA
    try {
      // M√©thode 1: Rechercher le bouton CTA par classe CSS
      const ctaTrigger = document.querySelector(`.hs-cta-trigger-button-${ctaId}`);
      if (ctaTrigger) {
        (ctaTrigger as HTMLElement).click();
        console.log(`‚úÖ CTA ${ctaId} d√©clench√© avec succ√®s (m√©thode 1)`);
        return true;
      }

      // M√©thode 2: Rechercher par attributs HubSpot
      const ctaNode = document.querySelector(`[id*="hs-cta-${ctaId}"]`);
      if (ctaNode) {
        (ctaNode as HTMLElement).click();
        console.log(`‚úÖ CTA ${ctaId} d√©clench√© avec succ√®s (m√©thode 2)`);
        return true;
      }

      // M√©thode 3: D√©clencher l'√©v√©nement directement si HubSpot est disponible
      if (window.hbspt) {
        // D√©clencher l'ouverture du calendrier via l'√©v√©nement personnalis√©
        const event = new CustomEvent('openCalendarAfterForm');
        window.dispatchEvent(event);
        console.log(`‚úÖ √âv√©nement calendrier d√©clench√© pour CTA ${ctaId}`);
        return true;
      }

      console.warn(`‚ö†Ô∏è Aucune m√©thode disponible pour CTA ${ctaId}`);
      return false;
      
    } catch (error) {
      console.error(`‚ùå Erreur lors du d√©clenchement du CTA ${ctaId}:`, error);
      return false;
    }
  }, [ctaId]);

  return { triggerCTA };
};